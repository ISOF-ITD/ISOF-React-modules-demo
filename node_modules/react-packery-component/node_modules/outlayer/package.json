{
  "_args": [
    [
      {
        "raw": "outlayer@github:eiriklv/outlayer",
        "scope": null,
        "escapedName": "outlayer",
        "name": "outlayer",
        "rawSpec": "github:eiriklv/outlayer",
        "spec": "github:eiriklv/outlayer",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:eiriklv/outlayer.git",
          "sshUrl": "git+ssh://git@github.com/eiriklv/outlayer.git",
          "httpsUrl": "git+https://github.com/eiriklv/outlayer.git",
          "gitUrl": "git://github.com/eiriklv/outlayer.git",
          "shortcut": "github:eiriklv/outlayer",
          "directUrl": "https://raw.githubusercontent.com/eiriklv/outlayer/master/package.json"
        }
      },
      "c:\\wamp\\www\\ISOF\\ISOF-React-modules-demo\\node_modules\\react-packery-component\\node_modules\\packery"
    ]
  ],
  "_from": "eiriklv/outlayer",
  "_id": "outlayer@1.2.0",
  "_inCache": true,
  "_location": "/react-packery-component/outlayer",
  "_phantomChildren": {},
  "_requested": {
    "raw": "outlayer@github:eiriklv/outlayer",
    "scope": null,
    "escapedName": "outlayer",
    "name": "outlayer",
    "rawSpec": "github:eiriklv/outlayer",
    "spec": "github:eiriklv/outlayer",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:eiriklv/outlayer.git",
      "sshUrl": "git+ssh://git@github.com/eiriklv/outlayer.git",
      "httpsUrl": "git+https://github.com/eiriklv/outlayer.git",
      "gitUrl": "git://github.com/eiriklv/outlayer.git",
      "shortcut": "github:eiriklv/outlayer",
      "directUrl": "https://raw.githubusercontent.com/eiriklv/outlayer/master/package.json"
    }
  },
  "_requiredBy": [
    "/react-packery-component/packery"
  ],
  "_resolved": "git://github.com/eiriklv/outlayer.git#aea1c8239d30ccc1d3664ca3fff2f6d4b20fb812",
  "_shasum": "268fa69b82e09863816fbb8ca22898d4a3884b91",
  "_shrinkwrap": null,
  "_spec": "outlayer@github:eiriklv/outlayer",
  "_where": "c:\\wamp\\www\\ISOF\\ISOF-React-modules-demo\\node_modules\\react-packery-component\\node_modules\\packery",
  "bugs": {
    "url": "https://github.com/braznaavtrav/outlayer/issues"
  },
  "dependencies": {
    "desandro-get-style-property": "github:eiriklv/get-style-property",
    "doc-ready": "github:eiriklv/doc-ready",
    "eventemitter": "github:braznaavtrav/EventEmitter",
    "eventie": "github:eiriklv/eventie",
    "get-size": "github:eiriklv/get-size",
    "matches-selector": "github:desandro/matches-selector#v1.0.3"
  },
  "description": "the brains and guts of a layout library",
  "devDependencies": {
    "jquery": ">=1.4.3 <2",
    "jquery-bridget": "github:braznaavtrav/jquery-bridget",
    "qunit": "^0.7.5"
  },
  "gitHead": "aea1c8239d30ccc1d3664ca3fff2f6d4b20fb812",
  "homepage": "https://github.com/braznaavtrav/outlayer#readme",
  "main": "outlayer.js",
  "name": "outlayer",
  "optionalDependencies": {},
  "readme": "# Outlayer\r\n\r\n_Layout class_\r\n\r\nOutlayer is a base layout class for layout libraries like [Packery](http://packery.metafizzy.co) and [Masonry](http://masonry.desandro.com)\r\n\r\nOutlayer layouts work with a container element and children item elements.\r\n\r\n``` html\r\n<div class=\"container\">\r\n  <div class=\"item\"></div>\r\n  <div class=\"item\"></div>\r\n  <div class=\"item\"></div>\r\n  ...\r\n</div>\r\n```\r\n\r\n## Outlayer.create()\r\n\r\nCreate a layout class with `Outlayer.create()`\r\n\r\n``` js\r\nvar Layout = Outlayer.create( namespace );\r\n// for example\r\nvar Masonry = Outlayer.create('masonry');\r\n```\r\n\r\n+ `namespace` _{String}_ should be camelCased\r\n+ returns `LayoutClass` _{Function}_\r\n\r\nCreate a new layout class. `namespace` is used for jQuery plugin, and for declarative initialization.\r\n\r\nThe `Layout` inherits from [`Outlayer.prototype`](docs/outlayer.md).\r\n\r\n```\r\nvar elem = document.querySelector('#selector');\r\nvar msnry = new Masonry( elem, {\r\n  // set options...\r\n  columnWidth: 200\r\n});\r\n```\r\n\r\n## Item\r\n\r\nLayouts work with Items, accessible as `Layout.Item`. See [Item API](docs/item.md).\r\n\r\n## Declarative\r\n\r\nAn Outlayer layout class can be initialized via HTML, by setting a class of `.js-namespace` on the element. Options can be set via a `data-namespace-options` attribution. For example:\r\n\r\n``` html\r\n<!-- var Masonry = Outlayer.create('masonry') -->\r\n<div id=\"container\" class=\"js-masonry\"\r\n  data-masonry-options='{ \"itemSelector\": \".item\", \"columnWidth\": 200 }'>\r\n  ...\r\n</div>\r\n```\r\n\r\nThe declarative attributes and class will be dashed. i.e. `Outlayer.create('myNiceLayout')` will use `js-my-nice-layout` the class and `data-my-nice-layout-options` as the options attribute.\r\n\r\n## .data()\r\n\r\nGet a layout instance from an element.\r\n\r\n```\r\nvar myMasonry = Masonry.data( document.querySelector('#container') );\r\n```\r\n\r\n## jQuery plugin\r\n\r\nThe layout class also works as jQuery plugin.\r\n\r\n``` js\r\n// create Masonry layout class, namespace will be the jQuery method\r\nvar Masonry = Outlayer.create('masonry');\r\n// rock some jQuery\r\n$( function() {\r\n  // .masonry() to initialize\r\n  var $container = $('#container').masonry({\r\n    // options...\r\n  });\r\n  // methods are available by passing a string as first parameter\r\n  $container.masonry( 'reveal', elems );\r\n});\r\n```\r\n\r\n## RequireJS\r\n\r\nTo use Outlayer with [RequireJS](http://requirejs.org/), you'll need to set some config.\r\n\r\nSet [baseUrl](http://requirejs.org/docs/api.html#config-baseUrl) to bower_components and set a [path config](http://requirejs.org/docs/api.html#config-paths) for all your application code.\r\n\r\n``` js\r\nrequirejs.config({\r\n  baseUrl: 'bower_components',\r\n  paths: {\r\n    app: '../'\r\n  }\r\n});\r\n\r\nrequirejs( [ 'outlayer/outlayer', 'app/my-component.js' ], function( Outlayer, myComp ) {\r\n  new Outlayer( /*...*/ )\r\n});\r\n```\r\n\r\nOr set a path config for all Outlayer dependencies.\r\n\r\n``` js\r\nrequirejs.config({\r\n  paths: {\r\n    eventie: 'bower_components/eventie',\r\n    'doc-ready': 'bower_components/doc-ready',\r\n    eventEmitter: 'bower_components/eventEmitter',\r\n    'get-style-property': 'bower_components/get-style-property',\r\n    'get-size': 'bower_components/get-size',\r\n    'matches-selector': 'bower_components/matches-selector'\r\n  }\r\n});\r\n```\r\n\r\n## MIT license\r\n\r\nOutlayer is released under the [MIT license](http://desandro.mit-license.org).\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/braznaavtrav/outlayer.git"
  },
  "version": "1.2.0"
}
